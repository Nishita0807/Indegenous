{"ast":null,"code":"var _jsxFileName = \"D:\\\\indi\\\\src\\\\NotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './NotesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    fetch('https://api.gyanibooks.com/library/get_dummy_notes').then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Failed to fetch notes');\n      }\n    }).then(data => setNotes(data)).catch(error => console.error(error));\n  }, []);\n  const parseNotesContent = notes => {\n    const parsedNotes = JSON.parse(notes);\n    let content = '';\n    if (parsedNotes && parsedNotes.content) {\n      parsedNotes.content.forEach(item => {\n        if (item.type === 'blockGroup' && item.content) {\n          item.content.forEach(blockContainer => {\n            if (blockContainer.type === 'blockContainer' && blockContainer.content) {\n              blockContainer.content.forEach(block => {\n                if (block.type === 'paragraph' && block.content) {\n                  block.content.forEach(text => {\n                    if (text.type === 'text') {\n                      content += text.text;\n                    }\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n    return content;\n  };\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"note-title\",\n          children: [\"Title: \", note.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note-content\",\n          children: [\"Category: \", note.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note-content\",\n          children: [\"User: \", note.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note-content\",\n          children: [\"Notes: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-text\",\n            children: parseNotesContent(note.notes)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedNote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"note-details-title\",\n        children: [\"Title: \", selectedNote.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"note-details-content\",\n        children: [\"Category: \", selectedNote.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"note-details-content\",\n        children: [\"User: \", selectedNote.user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"note-details-content\",\n        children: [\"Notes: \", selectedNote.notes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesList, \"GD1v6ScANAIWM9GEvhk2BHUqdYc=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NotesList","_s","notes","setNotes","selectedNote","setSelectedNote","fetch","then","response","ok","json","Error","data","catch","error","console","parseNotesContent","parsedNotes","JSON","parse","content","forEach","item","type","blockContainer","block","text","handleNoteClick","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","title","category","user","id","_c","$RefreshReg$"],"sources":["D:/indi/src/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './NotesList.css';\r\n\r\nconst NotesList = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.gyanibooks.com/library/get_dummy_notes')\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Failed to fetch notes');\r\n        }\r\n      })\r\n      .then((data) => setNotes(data))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const parseNotesContent = (notes) => {\r\n    const parsedNotes = JSON.parse(notes);\r\n\r\n    let content = '';\r\n    if (parsedNotes && parsedNotes.content) {\r\n      parsedNotes.content.forEach((item) => {\r\n        if (item.type === 'blockGroup' && item.content) {\r\n          item.content.forEach((blockContainer) => {\r\n            if (blockContainer.type === 'blockContainer' && blockContainer.content) {\r\n              blockContainer.content.forEach((block) => {\r\n                if (block.type === 'paragraph' && block.content) {\r\n                  block.content.forEach((text) => {\r\n                    if (text.type === 'text') {\r\n                      content += text.text;\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return content;\r\n  };\r\n\r\n  const handleNoteClick = (note) => {\r\n    setSelectedNote(note);\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes-list\">\r\n      <h2 className=\"title\">Notes</h2>\r\n      <div className=\"notes-container\">\r\n        {notes.map((note) => (\r\n          <div key={note.id} className=\"note-card\" onClick={() => handleNoteClick(note)}>\r\n            <h3 className=\"note-title\">Title: {note.title}</h3>\r\n            <p className=\"note-content\">Category: {note.category}</p>\r\n            <p className=\"note-content\">User: {note.user}</p>\r\n            <p className=\"note-content\">\r\n              Notes: <span className=\"note-text\">{parseNotesContent(note.notes)}</span>\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedNote && (\r\n        <div className=\"note-details\">\r\n          <h3 className=\"note-details-title\">Title: {selectedNote.title}</h3>\r\n          <p className=\"note-details-content\">Category: {selectedNote.category}</p>\r\n          <p className=\"note-details-content\">User: {selectedNote.user}</p>\r\n          <p className=\"note-details-content\">Notes: {selectedNote.notes}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,oDAAoD,CAAC,CACxDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAKT,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,iBAAiB,GAAId,KAAK,IAAK;IACnC,MAAMe,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACjB,KAAK,CAAC;IAErC,IAAIkB,OAAO,GAAG,EAAE;IAChB,IAAIH,WAAW,IAAIA,WAAW,CAACG,OAAO,EAAE;MACtCH,WAAW,CAACG,OAAO,CAACC,OAAO,CAAEC,IAAI,IAAK;QACpC,IAAIA,IAAI,CAACC,IAAI,KAAK,YAAY,IAAID,IAAI,CAACF,OAAO,EAAE;UAC9CE,IAAI,CAACF,OAAO,CAACC,OAAO,CAAEG,cAAc,IAAK;YACvC,IAAIA,cAAc,CAACD,IAAI,KAAK,gBAAgB,IAAIC,cAAc,CAACJ,OAAO,EAAE;cACtEI,cAAc,CAACJ,OAAO,CAACC,OAAO,CAAEI,KAAK,IAAK;gBACxC,IAAIA,KAAK,CAACF,IAAI,KAAK,WAAW,IAAIE,KAAK,CAACL,OAAO,EAAE;kBAC/CK,KAAK,CAACL,OAAO,CAACC,OAAO,CAAEK,IAAI,IAAK;oBAC9B,IAAIA,IAAI,CAACH,IAAI,KAAK,MAAM,EAAE;sBACxBH,OAAO,IAAIM,IAAI,CAACA,IAAI;oBACtB;kBACF,CAAC,CAAC;gBACJ;cACF,CAAC,CAAC;YACJ;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IAEA,OAAON,OAAO;EAChB,CAAC;EAED,MAAMO,eAAe,GAAIC,IAAI,IAAK;IAChCvB,eAAe,CAACuB,IAAI,CAAC;EACvB,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB/B,OAAA;MAAI8B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCnC,OAAA;MAAK8B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7B5B,KAAK,CAACiC,GAAG,CAAEP,IAAI,iBACd7B,OAAA;QAAmB8B,SAAS,EAAC,WAAW;QAACO,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAACC,IAAI,CAAE;QAAAE,QAAA,gBAC5E/B,OAAA;UAAI8B,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,SAAO,EAACF,IAAI,CAACS,KAAK;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnDnC,OAAA;UAAG8B,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,YAAU,EAACF,IAAI,CAACU,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDnC,OAAA;UAAG8B,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,QAAM,EAACF,IAAI,CAACW,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDnC,OAAA;UAAG8B,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,SACnB,eAAA/B,OAAA;YAAM8B,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEd,iBAAiB,CAACY,IAAI,CAAC1B,KAAK;UAAC;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC;MAAA,GANIN,IAAI,CAACY,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACL9B,YAAY,iBACXL,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B/B,OAAA;QAAI8B,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,SAAO,EAAC1B,YAAY,CAACiC,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnEnC,OAAA;QAAG8B,SAAS,EAAC,sBAAsB;QAAAC,QAAA,GAAC,YAAU,EAAC1B,YAAY,CAACkC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzEnC,OAAA;QAAG8B,SAAS,EAAC,sBAAsB;QAAAC,QAAA,GAAC,QAAM,EAAC1B,YAAY,CAACmC,IAAI;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjEnC,OAAA;QAAG8B,SAAS,EAAC,sBAAsB;QAAAC,QAAA,GAAC,SAAO,EAAC1B,YAAY,CAACF,KAAK;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CAzEID,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AA2Ef,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}