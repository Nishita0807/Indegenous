{"ast":null,"code":"var _jsxFileName = \"D:\\\\indi\\\\src\\\\NotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './NotesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch('https://api.gyanibooks.com/library/get_dummy_notes').then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Failed to fetch notes');\n      }\n    }).then(data => setNotes(data)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notes-container\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"note-title\",\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note-content\",\n          children: JSON.parse(note.notes).content[0].content[0].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note-details\",\n          children: [\"ID: \", note.id, \" | User: \", note.user, \" | Category: \", note.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesList, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NotesList","_s","notes","setNotes","fetch","then","response","ok","json","Error","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","title","JSON","parse","content","text","id","user","category","_c","$RefreshReg$"],"sources":["D:/indi/src/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './NotesList.css';\r\n\r\nconst NotesList = () => {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.gyanibooks.com/library/get_dummy_notes')\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Failed to fetch notes');\r\n        }\r\n      })\r\n      .then((data) => setNotes(data))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"notes-list\">\r\n      <h2 className=\"title\">Notes</h2>\r\n      <ul className=\"notes-container\">\r\n        {notes.map((note) => (\r\n          <li key={note.id} className=\"note-card\">\r\n            <h3 className=\"note-title\">{note.title}</h3>\r\n            <p className=\"note-content\">{JSON.parse(note.notes).content[0].content[0].text}</p>\r\n            <p className=\"note-details\">\r\n              ID: {note.id} | User: {note.user} | Category: {note.category}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,oDAAoD,CAAC,CACxDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAKP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBhB,OAAA;MAAIe,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCpB,OAAA;MAAIe,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC5Bb,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACdtB,OAAA;QAAkBe,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACrChB,OAAA;UAAIe,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5CpB,OAAA;UAAGe,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEQ,IAAI,CAACC,KAAK,CAACH,IAAI,CAACnB,KAAK,CAAC,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACA,OAAO,CAAC,CAAC,CAAC,CAACC;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnFpB,OAAA;UAAGe,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,MACtB,EAACM,IAAI,CAACM,EAAE,EAAC,WAAS,EAACN,IAAI,CAACO,IAAI,EAAC,eAAa,EAACP,IAAI,CAACQ,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA,GALGE,IAAI,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}